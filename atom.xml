<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="https://chinaxizozhi.github.io/chinaXiaoZhi.github.io/atom.xml" rel="self"/>
  
  <link href="https://chinaxizozhi.github.io/chinaXiaoZhi.github.io/"/>
  <updated>2021-07-19T08:53:06.773Z</updated>
  <id>https://chinaxizozhi.github.io/chinaXiaoZhi.github.io/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>个人学习记录</title>
    <link href="https://chinaxizozhi.github.io/chinaXiaoZhi.github.io/2021/07/19/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E8%BD%BD/"/>
    <id>https://chinaxizozhi.github.io/chinaXiaoZhi.github.io/2021/07/19/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E8%BD%BD/</id>
    <published>2021-07-18T16:00:00.000Z</published>
    <updated>2021-07-19T08:53:06.773Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2021年6月7号学习ElasticSearch-完毕"><a href="#2021年6月7号学习ElasticSearch-完毕" class="headerlink" title="2021年6月7号学习ElasticSearch(完毕)"></a>2021年6月7号学习<code>ElasticSearch</code>(完毕)</h2><ul><li>计划学习 <code>JAVASE</code>网络编程</li></ul><h2 id="2021年6月15号学习短信验证码-完毕"><a href="#2021年6月15号学习短信验证码-完毕" class="headerlink" title="2021年6月15号学习短信验证码(完毕)"></a>2021年6月15号学习短信验证码(完毕)</h2><ul><li>用户登录名称 xxxxxxxxxxxxxxxxxx<ul><li>AccessKey ID 你的 AccessKey ID</li><li>AccessKey Secret 你的 AccessKey Secret</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 导入短信业务依赖 --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.aliyun&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;dysmsapi20170525&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;<span class="number">2.0</span><span class="number">.4</span>&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.alibaba&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;fastjson&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;<span class="number">1.2</span><span class="number">.73</span>&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-data-redis&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;<span class="number">2.4</span><span class="number">.4</span>&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//代码</span></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SmsApplicationTests</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">contextLoads</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">            Client client = SmsApplicationTests.createClient(<span class="string">&quot;accessKeyId&quot;</span>, <span class="string">&quot;accessKeySecret&quot;</span>);</span><br><span class="line">            SendSmsRequest sendSmsRequest = <span class="keyword">new</span> SendSmsRequest();</span><br><span class="line">            Map&lt;String,Object&gt; map = <span class="keyword">new</span> HashMap&lt;String,Object&gt;();</span><br><span class="line">            sendSmsRequest.setPhoneNumbers(<span class="string">&quot;15840905655&quot;</span>);</span><br><span class="line">            <span class="comment">//短信签名</span></span><br><span class="line">            sendSmsRequest.setSignName(<span class="string">&quot;小志学习Java&quot;</span>);</span><br><span class="line">            <span class="comment">//短信模板code</span></span><br><span class="line">            sendSmsRequest.setTemplateCode(<span class="string">&quot;SMS_218174229&quot;</span>);</span><br><span class="line">            <span class="comment">//模板参数为json格式的字符</span></span><br><span class="line">            map.put(<span class="string">&quot;code&quot;</span>,<span class="number">2345</span>);</span><br><span class="line">            sendSmsRequest.setTemplateParam(JSONObject.toJSONString(map));</span><br><span class="line">            <span class="comment">// 复制代码运行请自行打印 API 的返回值</span></span><br><span class="line">            client.sendSms(sendSmsRequest);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 使用AK&amp;SK初始化账号Client</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> accessKeyId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> accessKeySecret</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Client</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> com.aliyun.dysmsapi20170525.<span class="function">Client <span class="title">createClient</span><span class="params">(String accessKeyId, String accessKeySecret)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Config config = <span class="keyword">new</span> Config()</span><br><span class="line">                <span class="comment">// 您的AccessKey ID</span></span><br><span class="line">                .setAccessKeyId(<span class="string">&quot;xxxxxxxxxxxx&quot;</span>)</span><br><span class="line">                <span class="comment">// 您的AccessKey Secret</span></span><br><span class="line">                .setAccessKeySecret(<span class="string">&quot;xxxxxxxxxxxxxxxxxxxxxxx&quot;</span>);</span><br><span class="line">        <span class="comment">// 访问的域名</span></span><br><span class="line">        config.endpoint = <span class="string">&quot;dysmsapi.aliyuncs.com&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> com.aliyun.dysmsapi20170525.Client(config);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2021年6月18号学习redis-完毕"><a href="#2021年6月18号学习redis-完毕" class="headerlink" title="2021年6月18号学习redis(完毕)"></a>2021年6月18号学习<code>redis</code>(完毕)</h2><ul><li><p>数据结构 : </p><ul><li><p><code>set</code></p><ul><li><code>sadd key 值</code> 添加</li><li><code>smembers key</code> 查看</li><li><code>srandmember key</code> 随机选出一个元素</li><li><code>spop key</code> 随机删除<code>set</code>集合中的元素</li><li><code>smove key1 key2 值</code> 将一个值移动到另一个集合中</li><li><code>sdiff key1 key2</code> 差极</li><li><code>sinter key1 key2</code> 交集</li><li><code>sunion key1 key2</code> 并集</li></ul></li><li><p><code>Hash</code>(哈希)</p><ul><li><p>```bash<br>127.0.0.1:6379&gt; hset myhash field1 xiaozhi<br>(integer) 1<br>127.0.0.1:6379&gt; hget myhash field1<br>“xiaozhi”<br>127.0.0.1:6379&gt; hmset myhas field1 hello field2 world<br>OK<br>127.0.0.1:6379&gt; hmget myhas field1 field2</p><ol><li>“hello”</li><li>“world”</li></ol><p>127.0.0.1:6379&gt; HGETALL myhash</p><ol><li>“field1”</li><li>“xiaozhi”</li></ol><p>127.0.0.1:6379&gt; hgetall myhash</p><ol><li>“field1”</li><li>“xiaozhi”</li></ol><p>127.0.0.1:6379&gt;<br>127.0.0.1:6379&gt; HDEL myhas field1 # 删除<br>(integer) 1<br>########################################################################<br>127.0.0.1:6379&gt; HDEL myhas field1  # 获取hash长度<br>(integer) 1<br>hkeys myhas # 获取所有的key<br>hvals myhas # 获取所有的vaklu</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* ```bash</span><br><span class="line">  #  geospatial </span><br><span class="line">  127.0.0.1:6379&gt; GEOADD china:city 116.40 39.90 beijing </span><br><span class="line">  (integer) 1</span><br><span class="line">  127.0.0.1:6379&gt; GEOADD china:city 121.47 31.23 shanghai</span><br><span class="line">  (integer) 1</span><br><span class="line">  127.0.0.1:6379&gt; GEOADD china:city 106.50 29.53 chognqing</span><br><span class="line">  (integer) 1</span><br><span class="line">  127.0.0.1:6379&gt; </span><br><span class="line">  </span><br><span class="line">  ## 获取经度和纬度</span><br><span class="line">  127.0.0.1:6379&gt; GEOPOS china:city beijing</span><br><span class="line">  1) 1) &quot;116.39999896287918091&quot;</span><br><span class="line">     2) &quot;39.90000009167092543&quot;</span><br><span class="line">  127.0.0.1:6379&gt; GEOPOS china:city beijing chongqing</span><br><span class="line">  1) 1) &quot;116.39999896287918091&quot;</span><br><span class="line">     2) &quot;39.90000009167092543&quot;</span><br><span class="line">  2) (nil)</span><br><span class="line">  127.0.0.1:6379&gt; GEOPOS china:city beijing chognqing</span><br><span class="line">  1) 1) &quot;116.39999896287918091&quot;</span><br><span class="line">     2) &quot;39.90000009167092543&quot;</span><br><span class="line">  2) 1) &quot;106.49999767541885376&quot;</span><br><span class="line">     2) &quot;29.52999957900659211&quot;</span><br><span class="line">  127.0.0.1:6379&gt; </span><br><span class="line">  </span><br><span class="line">  ## 查看城市之间的距离</span><br><span class="line">  127.0.0.1:6379&gt; GEODIST china:city beijing shanghai</span><br><span class="line">  &quot;1067378.7564&quot;</span><br><span class="line">  127.0.0.1:6379&gt; GEODIST china:city beijing shanghai km</span><br><span class="line">  &quot;1067.3788&quot;</span><br><span class="line">  127.0.0.1:6379&gt; GEODIST china:city beijing chognqing km</span><br><span class="line">  &quot;1464.0708&quot;</span><br><span class="line">  </span><br><span class="line">  ## 查看附近的额人  所有的城市都录入 才会让结果准确</span><br><span class="line">  127.0.0.1:6379&gt; GEORADIUS china:city 110 30 1000 km</span><br><span class="line">  1) &quot;chognqing&quot;</span><br><span class="line">  127.0.0.1:6379&gt; GEORADIUS china:city 110 30 1000 km withcoord</span><br><span class="line">  1) 1) &quot;chognqing&quot;</span><br><span class="line">     2) 1) &quot;106.49999767541885376&quot;</span><br><span class="line">        2) &quot;29.52999957900659211&quot;</span><br><span class="line">  127.0.0.1:6379&gt; GEORADIUS china:city 110 30 1000 km withcoord count 1</span><br><span class="line">  1) 1) &quot;chognqing&quot;</span><br><span class="line">     2) 1) &quot;106.49999767541885376&quot;</span><br><span class="line">        2) &quot;29.52999957900659211&quot;</span><br><span class="line">    </span><br><span class="line">  # 找出位于制定元素周围的其他元素</span><br><span class="line">  127.0.0.1:6379&gt; GEORADIUSBYMEMBER china:city beijing 1000 km</span><br><span class="line">  1) &quot;beijing&quot;</span><br><span class="line">  </span><br><span class="line">  # 两个城市返回的一维字符串</span><br><span class="line">  127.0.0.1:6379&gt; GEOHASH china:city beijing chognqing</span><br><span class="line">  1) &quot;wx4fbxxfke0&quot;</span><br><span class="line">  2) &quot;wm5xzrybty0&quot;</span><br><span class="line">  </span><br><span class="line">  # 底层就是zset</span><br><span class="line">  127.0.0.1:6379&gt; ZRANGE china:city 0 -1</span><br><span class="line">  1) &quot;chognqing&quot;</span><br><span class="line">  2) &quot;shanghai&quot;</span><br><span class="line">  3) &quot;beijing&quot;</span><br><span class="line">  127.0.0.1:6379&gt; zrem china:city beijing</span><br><span class="line">  (integer) 1</span><br><span class="line">  127.0.0.1:6379&gt; ZRANGE china:city 0 -1</span><br><span class="line">  1) &quot;chognqing&quot;</span><br><span class="line">  2) &quot;shanghai&quot;</span><br><span class="line">  </span><br></pre></td></tr></table></figure></li><li><p>```bash<br>pfcount key1  key2 key3   # 新创建的key1  统计 key2 key3</p><h1 id="Bitmaps"><a href="#Bitmaps" class="headerlink" title="Bitmaps"></a>Bitmaps</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* ```b`ash</span><br><span class="line">  # 事务</span><br></pre></td></tr></table></figure><p>127.0.0.1:6379&gt; MULTI<br>OK<br>127.0.0.1:6379(TX)&gt; set k1 1<br>QUEUED<br>127.0.0.1:6379(TX)&gt; set k2 2<br>QUEUED<br>127.0.0.1:6379(TX)&gt; EXEC</p><ol><li>OK</li><li>OK</li></ol><p>127.0.</p></li></ul></li></ul></li></ul><p>0.1:6379&gt; </p><pre><code>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">      </span><br><span class="line">      </span><br><span class="line"></span><br><span class="line">&gt;# `redis.config` </span><br><span class="line"></span><br><span class="line">* 阅读配置文件</span><br><span class="line"></span><br><span class="line">&gt;# `Redis`持久化</span><br><span class="line"></span><br><span class="line">* ## `RDB`</span><br><span class="line"></span><br><span class="line">  * 在主从复制中`rdb`是用来备用的</span><br><span class="line"></span><br><span class="line">  * `Redis` 是一种内存数据库，将数据保存在内存中，读写效率要比传统的将数据保存在磁盘上的数据库要快很多。但是一旦进程退出，`Redis` 的数据就会丢失。</span><br><span class="line"></span><br><span class="line">  * ==rdb保存的文件是dump.rdb==</span><br><span class="line"></span><br><span class="line">  * 查看进程</span><br><span class="line"></span><br><span class="line">    * ``` bash</span><br><span class="line">      ps -ef|grep redis</span><br></pre></td></tr></table></figure>&gt; 触发机制* `save`的规则满足情况下,会触发`rdb`规则* 执行`flushall`操作时触发* 退出时也会触发&gt; 如何恢复`rdb`文件* 只需将`reb`文件放到我们的`redis`启动目录下就可以,`redis`启动的时候回自动检查`dump.rdb`将其恢复其中的数据* ```bash  config get dir  &quot;dir&quot;  &quot;/usr/locale/bin&quot;  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    * 优点 : </span><br><span class="line"></span><br><span class="line">      * 适合大规模数据恢复 ! `dump.rdb`</span><br><span class="line">      * 如果你对数据完整新要求不高</span><br><span class="line"></span><br><span class="line">    * 缺点 :</span><br><span class="line"></span><br><span class="line">      * 需要一定的时间间隔去操作 ! 如果`redis`意外宕机了,最后一次修改就没有了 ! </span><br><span class="line">      * `fork`进程的时候,会占用一定的空间</span><br><span class="line"></span><br><span class="line">* ## `AOF(Append Only Fiel)`</span><br><span class="line"></span><br><span class="line">  * 将我们的所有命令都记录下来,`history`恢复的时候就把这个文件全部执行一遍</span><br><span class="line">  * 默认是不开启的,我们需要手动进行配置</span><br><span class="line">  * 重启`redis`就可以生效了</span><br><span class="line">  * 如果`aof`配置文件有错误,`redis`启动不起来的,需要修复配置文件`redis`给我们提供了一个工具`redis-chek-aof` </span><br><span class="line">  * 优点 :</span><br><span class="line">    * 每一次修改都同步,文件的完整新会更好</span><br><span class="line">    * 默认开启是每秒同步一次,可能会丢失一秒数据</span><br><span class="line">    * 从不同步,效率更高</span><br><span class="line">  * 缺点 : </span><br><span class="line">    * 相对于数据文件来说,`aof`远远大于`rdb`,修复速度也比`rdb`慢</span><br><span class="line"></span><br><span class="line">&gt;#  `Redis`发布订阅</span><br><span class="line"></span><br><span class="line">&gt; # 主从复制</span><br><span class="line"></span><br><span class="line">&gt; ## 哨兵模式(自动版选取老大)</span><br><span class="line"></span><br><span class="line">```bash</span><br><span class="line"># 如果有多集群需要配置 多端口</span><br><span class="line">port 26379</span><br><span class="line">sentinel monitor mymaster 192.168.247.128 6379 1</span><br><span class="line">sentinel down-after-milliseconds mymaster 5000</span><br><span class="line">sentinel failover-timeout mymaster 900000</span><br><span class="line">sentinel parallel-syncs mymaster 2</span><br></pre></td></tr></table></figure></code></pre><blockquote><h1 id="Redis缓存穿透和雪崩"><a href="#Redis缓存穿透和雪崩" class="headerlink" title="Redis缓存穿透和雪崩"></a><code>Redis</code>缓存穿透和雪崩</h1></blockquote><h1 id="springSecurity-学习-2021-6-24-完毕"><a href="#springSecurity-学习-2021-6-24-完毕" class="headerlink" title="springSecurity   学习(2021.6.24 完毕)"></a><code>springSecurity </code>  学习(2021.6.24 完毕)</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;2021年6月7号学习ElasticSearch-完毕&quot;&gt;&lt;a href=&quot;#2021年6月7号学习ElasticSearch-完毕&quot; class=&quot;headerlink&quot; title=&quot;2021年6月7号学习ElasticSearch(完毕)&quot;&gt;&lt;/a&gt;2021</summary>
      
    
    
    
    <category term="JAVA" scheme="https://chinaxizozhi.github.io/chinaXiaoZhi.github.io/category/JAVA/"/>
    
    
    <category term="短信服务" scheme="https://chinaxizozhi.github.io/chinaXiaoZhi.github.io/tag/%E7%9F%AD%E4%BF%A1%E6%9C%8D%E5%8A%A1/"/>
    
  </entry>
  
</feed>
